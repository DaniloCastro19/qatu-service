stages:
  - test
  - sonar_analysis
  - acceptance-tests
  - push

image: docker:24.0

services:
  - name: docker:24.0-dind
    alias: docker

variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ""

before_script:
  - apk add --no-cache nodejs npm

test-app:
  stage: test
  image: docker:24.0
  services:
    - name: docker:24.0-dind
      alias: docker
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  script:
    - docker build --target builder -t local-builder .
    - docker create --name temp-container local-builder
    - docker cp temp-container:/app/coverage ./coverage
    - docker rm temp-container
  artifacts:
    paths:
      - coverage/

sonar_analysis:
  stage: sonar_analysis
  image:
    name: sonarsource/sonar-scanner-cli:11.3.1.1910_7.1.0
    entrypoint: [""]
  before_script: []
  script:
    - sonar-scanner  
      -Dsonar.projectKey="qatu-service"
      -Dsonar.sources=src
      -Dsonar.host.url=$SONAR_HOST_URL    
      -Dsonar.login=$SONAR_TOKEN    
      -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info    
      -Dsonar.qualitygate.wait=true  
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  allow_failure: true
  dependencies:
    - test-app

acceptance-tests:
  stage: acceptance-tests
  image: alpine:3.18
  services:
    - name: $CI_REGISTRY_IMAGE:DEV-$NEW_VERSION
      alias: app
    - name: mongo:8.0
      alias: mongo
  variables:
    HOST: app
    PORT: 3000
  before_script:
    - apk add --no-cache bash jq curl
    - chmod +x ./acceptance-tests.sh
  script:
    - ./acceptance-tests.sh
  dependencies:
    - push-container-image

push-image:
  stage: push
  image: docker:24.0
  only:
    - main
  before_script:
    - apk add --no-cache nodejs npm
    - echo "$REGISTRY_TOKEN" | docker login registry.gitlab.com -u $LOGIN_USER --password-stdin
  script:
    - NEW_VERSION=$(node -p "require('./package.json').version")
    - docker build -t "$CI_REGISTRY_IMAGE:DEV-$NEW_VERSION" --target production .
    - docker push "$CI_REGISTRY_IMAGE:DEV-$NEW_VERSION"
    - docker tag "$CI_REGISTRY_IMAGE:DEV-$NEW_VERSION" "$CI_REGISTRY_IMAGE:latest"
    - docker push "$CI_REGISTRY_IMAGE:latest"
  dependencies:
    - sonar_analysis