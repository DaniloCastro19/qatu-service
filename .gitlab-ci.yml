stages:
  - test
  - sonar_analysis
  - push

image: docker:24.0

services:
  - name: docker:24.0-dind
    alias: docker

variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ""

before_script:
  - apk add --no-cache nodejs npm

workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: always

test-app:
  stage: test
  image: docker:24.0
  services:
    - name: docker:24.0-dind
      alias: docker
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  script:
    - docker build --target builder .
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage/cobertura-coverage.xml
    paths:
      - coverage/
    expire_in: 1 week

sonar_analysis:
  stage: sonar_analysis
  image:
    name: sonarsource/sonar-scanner-cli:11.3.1.1910_7.1.0
    entrypoint: [""]
  before_script: []
  script:
    - sonar-scanner  
      -Dsonar.projectKey="qatu-service"
      -Dsonar.sources=src
      -Dsonar.host.url=$SONAR_HOST_URL    
      -Dsonar.login=$SONAR_TOKEN    
      -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info    
      -Dsonar.qualitygate.wait=true  
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  allow_failure: false
  dependencies:
    - test-app

push-image:
  stage: push
  script:
    - echo "$REGISTRY_TOKEN" | docker login registry.gitlab.com -u $LOGIN_USER --password-stdin
    - docker build -t "$CI_REGISTRY_IMAGE:1.0" --target production .
    - docker push "$CI_REGISTRY_IMAGE:1.0"
  dependencies:
    - sonar_analysis